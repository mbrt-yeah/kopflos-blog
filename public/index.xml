<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kopflos</title>
    <link>https://kopflos.mbrt.io/blog/</link>
    <description>Recent content on Kopflos</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 31 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kopflos.mbrt.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Source code management</title>
      <link>https://kopflos.mbrt.io/blog/posts/source-code-management/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kopflos.mbrt.io/blog/posts/source-code-management/</guid>
      <description>Overview In order to manage the source code of »kopflos« I will use a Github repository which is publicly available via https://github.com/mbrt-yeah/kopflos.
Since I&amp;rsquo;m going to use Scrumban which is an iteration-based development process (see Software development methodology, I will create a development branch for every iteration before it starts.
This means, that at the beginning of each iteration, at least the following branches will be available in the repository:</description>
    </item>
    
    <item>
      <title>Programming language and coding conventions</title>
      <link>https://kopflos.mbrt.io/blog/posts/programming-language-and-coding-conventions/</link>
      <pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kopflos.mbrt.io/blog/posts/programming-language-and-coding-conventions/</guid>
      <description>The language The core of »kopflos« will be a Node.js application. This means that either Javascript or Typescript will be the programming language of choice.
To be honest, I don&amp;rsquo;t have to think long about this. The choice falls on Typescript for the following two reasons:
I have been programming a lot with this language lately and am therefore more used to it than Javascript. The optional static typing and the resulting features at language and IDE level make me more productive.</description>
    </item>
    
    <item>
      <title>Software development methodology</title>
      <link>https://kopflos.mbrt.io/blog/posts/software-development-methodology/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kopflos.mbrt.io/blog/posts/software-development-methodology/</guid>
      <description>Scrumban In order to plan and keep track of the development process I will use the Scrumban methodology.
This methodology gives me a lot of freedom regarding the conception of the individual features of »kopflos«. Instead of having to plan the entire features-set in advance, this method allows me to do so on-the-fly.
Also, this method is not so strict regarding the timing of the implementation of the individual features. All I have to do is to plan iterations in which I commit to the implementation of a certain set of features.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kopflos.mbrt.io/blog/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kopflos.mbrt.io/blog/readme/</guid>
      <description>Hugo Theme Mini Example Site This repository offers an example site for Hugo Theme mini and also it provides the default content for Online Demo.
Using Install Hugo
Clone this repository
$ git clone https://github.com/nodejh/hugo-theme-mini $ cd exampleSite Run Hugo server. The exampleSite use theme hugo-theme-mini by setting themesDir as ../../
$ hugo server </description>
    </item>
    
  </channel>
</rss>
